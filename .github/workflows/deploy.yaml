on:
  push:
    branches:
      - 'dev'
    paths:
      - 'services/*/rest/**'
      - 'services/*/rpc/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Code
        uses: actions/checkout@v4

      - name: Set up Golang
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.5'

      - name: Test
        env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
          event_path: ${{ github.event_path }}
          event_name: ${{ github.event_name }}
        run: |
          echo $EVENT_CONTEXT
          echo $event_path
          echo $event_name

      - name: Build
        run: |
          go mod tidy
          cd service/${{env.service}}/${{env.service_type}}
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -trimpath -ldflags "-w -s" -o .build/app

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: service/${{env.service}}/${{env.service_type}}
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: admgo/admgo-${{env.service}}-${{env.service_type}}:0.0.1
